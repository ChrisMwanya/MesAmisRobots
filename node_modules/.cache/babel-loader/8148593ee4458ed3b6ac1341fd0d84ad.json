{"ast":null,"code":"var _jsxFileName = \"/home/user/traveauKDA/Travail10/AmisRobot/src/components/cardcontainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./card\";\nimport InputField from \"./inputfield\";\nimport \"./../App.css\";\nimport Loading from \"./loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardContainer = () => {\n  _s();\n\n  let [friends, setFriends] = useState([]);\n  let [friendsMore, setFriendsMore] = useState([]);\n  let [load, setLoad] = useState(false);\n  let [friendsBuffer, setFriendsBuffer] = useState(friends);\n  useEffect(() => {\n    setLoad(true);\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      let dataMapped = data.map(({\n        id,\n        name,\n        email\n      }) => {\n        return {\n          id,\n          name,\n          email\n        };\n      });\n      let dataMoreMapped = data.map(({\n        id,\n        name,\n        email,\n        username,\n        address,\n        phone,\n        website,\n        company\n      }) => {\n        return {\n          id,\n          name,\n          email,\n          username,\n          address,\n          phone,\n          website,\n          company\n        };\n      });\n      setFriends(dataMapped);\n      setFriendsBuffer(dataMapped);\n      setFriendsMore(dataMoreMapped);\n      setLoad(false);\n    });\n  }, []);\n\n  const handleChange = e => {\n    e.preventDefault();\n    const filteredFriends = friends.filter(friend => {\n      return friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setFriendsBuffer(friendsBuffer = filteredFriends);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: load ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bloc-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: \"MES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: \"AMIS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: \"ROBOTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloc-cards\",\n        children: friendsBuffer.map((friend, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            name: friend.name,\n            email: friend.email,\n            url: `https://robohash.org/${friend.id}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CardContainer, \"oFIIvBq5vLG1mNLae4WWR5y4jBs=\");\n\n_c = CardContainer;\nexport default CardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"sources":["/home/user/traveauKDA/Travail10/AmisRobot/src/components/cardcontainer.jsx"],"names":["React","useState","useEffect","Card","InputField","Loading","CardContainer","friends","setFriends","friendsMore","setFriendsMore","load","setLoad","friendsBuffer","setFriendsBuffer","fetch","then","response","json","data","dataMapped","map","id","name","email","dataMoreMapped","username","address","phone","website","company","handleChange","e","preventDefault","filteredFriends","filter","friend","toLowerCase","includes","target","value","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./card\";\nimport InputField from \"./inputfield\";\nimport \"./../App.css\";\nimport Loading from \"./loading\";\n\n\nconst CardContainer = () => {\n    let [friends, setFriends] = useState([]);\n\tlet [friendsMore, setFriendsMore] = useState([]);\n\tlet [load, setLoad] = useState(false);   \n\tlet [friendsBuffer, setFriendsBuffer] = useState(friends);\n\n    useEffect(() => {\n    \n        setLoad(true);\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => response.json())\n            .then((data) => {\n                let dataMapped = data.map(({ id, name, email }) => {\n                    return { id, name, email };\n                });\n    \n                let dataMoreMapped = data.map(\n                    ({ id, name, email, username, address, phone, website, company }) => {\n                        return {\n                            id,\n                            name,\n                            email,\n                            username,\n                            address,\n                            phone,\n                            website,\n                            company,\n                        };\n                    }\n                );\n                setFriends(dataMapped);\n                setFriendsBuffer(dataMapped);\n                setFriendsMore(dataMoreMapped);\n                setLoad(false);\n            });\n    }, []);\n\n    const handleChange = (e) => {\n\t\te.preventDefault();\n\t\tconst filteredFriends = friends.filter((friend) => {\n\t\t\treturn friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n\t\t});\n\t\tsetFriendsBuffer((friendsBuffer = filteredFriends));\n\t};\n\n    return (\n\t\t<div className=\"App\">\n\t\t\t{load ? (\n\t\t\t\t<Loading />\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h1 className=\"bloc-cards\">\n\t\t\t\t\t\t<div className=\"centered\">MES</div>{\" \"}\n\t\t\t\t\t\t<div className=\"centered\">AMIS</div>\n\t\t\t\t\t\t<div className=\"centered\">ROBOTS</div>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<InputField onChange={handleChange} />\n\t\t\t\t\t<div className=\"bloc-cards\">\n\t\t\t\t\t\t{friendsBuffer.map((friend, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Card\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tname={friend.name}\n\t\t\t\t\t\t\t\t\temail={friend.email}\n\t\t\t\t\t\t\t\t\turl={`https://robohash.org/${friend.id}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default CardContainer\n\n"]},"metadata":{},"sourceType":"module"}