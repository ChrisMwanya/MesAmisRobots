{"ast":null,"code":"var _jsxFileName = \"/home/user/traveauKDA/Travail10/AmisRobot/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport InputField from \"./components/inputfield\";\nimport \"./App.css\";\nimport Loading from \"./components/loading\";\nimport CardContainer from \"./components/cardcontainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let [friends, setFriends] = useState([]);\n  let [friendsMore, setFriendsMore] = useState([]);\n  let [load, setLoad] = useState(false);\n  let [modalIsOpen, setModalIsOpen] = useState(false);\n  let [singleFriend, setSingleFriend] = useState({});\n  let [friendsTampon, setFriendsTampon] = useState(friends);\n  useEffect(() => {\n    setLoad(true);\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      let dataMapped = data.map(({\n        id,\n        name,\n        email\n      }) => {\n        return {\n          id,\n          name,\n          email\n        };\n      });\n      let dataMoreMapped = data.map(({\n        id,\n        name,\n        email,\n        username,\n        address,\n        phone,\n        website,\n        company\n      }) => {\n        return {\n          id,\n          name,\n          email,\n          username,\n          address,\n          phone,\n          website,\n          company\n        };\n      });\n      setFriends(dataMapped);\n      setFriendsTampon(dataMapped);\n      setFriendsMore(dataMoreMapped);\n      setLoad(false);\n    });\n  }, []);\n\n  const handleChange = e => {\n    e.preventDefault();\n    const filteredFriends = friends.filter(friend => {\n      return friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setFriendsTampon(friendsTampon = filteredFriends);\n  };\n\n  const openModal = id => {\n    setSingleFriend(friendsMore.find(friend => {\n      return friend.id === id;\n    }));\n    setModalIsOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this) // <div className=\"App\">\n  // \t{load ? (\n  // \t\t<Loading />\n  // \t) : (\n  // \t\t<>\n  // \t\t\t<h1 className=\"bloc-cards\">\n  // \t\t\t\t<div className=\"centered\">MES</div>{\" \"}\n  // \t\t\t\t<div className=\"centered\">AMIS</div>\n  // \t\t\t\t<div className=\"centered\">ROBOTS</div>\n  // \t\t\t</h1>\n  // \t\t\t<InputField onChange={handleChange} />\n  // \t\t\t<div className=\"bloc-cards\">\n  // \t\t\t\t{friendsTampon.map((friend, index) => {\n  // \t\t\t\t\treturn (\n  // \t\t\t\t\t\t<Card\n  // \t\t\t\t\t\t\tonClick={() => openModal(friend.id)}\n  // \t\t\t\t\t\t\tkey={index}\n  // \t\t\t\t\t\t\tname={friend.name}\n  // \t\t\t\t\t\t\temail={friend.email}\n  // \t\t\t\t\t\t\turl={`https://robohash.org/${friend.id}`}\n  // \t\t\t\t\t\t/>\n  // \t\t\t\t\t);\n  // \t\t\t\t})}\n  // \t\t\t</div>\t\t\t\t\n  // \t\t</>\n  // \t)}\n  // </div>\n  ;\n};\n\n_s(App, \"+QMr8/7eo0S/tmJ8k7kw6K51CbY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/traveauKDA/Travail10/AmisRobot/src/App.jsx"],"names":["React","useState","useEffect","Card","InputField","Loading","CardContainer","App","friends","setFriends","friendsMore","setFriendsMore","load","setLoad","modalIsOpen","setModalIsOpen","singleFriend","setSingleFriend","friendsTampon","setFriendsTampon","fetch","then","response","json","data","dataMapped","map","id","name","email","dataMoreMapped","username","address","phone","website","company","handleChange","e","preventDefault","filteredFriends","filter","friend","toLowerCase","includes","target","value","openModal","find"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport InputField from \"./components/inputfield\";\nimport \"./App.css\";\nimport Loading from \"./components/loading\";\nimport CardContainer from \"./components/cardcontainer\";\n\n\nconst App = () => {\n\tlet [friends, setFriends] = useState([]);\n\tlet [friendsMore, setFriendsMore] = useState([]);\n\tlet [load, setLoad] = useState(false);\n\tlet [modalIsOpen, setModalIsOpen] = useState(false);\n\tlet [singleFriend, setSingleFriend] = useState({});\n\tlet [friendsTampon, setFriendsTampon] = useState(friends);\n\n\tuseEffect(() => {\n\t\tsetLoad(true);\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet dataMapped = data.map(({ id, name, email }) => {\n\t\t\t\t\treturn { id, name, email };\n\t\t\t\t});\n\n\t\t\t\tlet dataMoreMapped = data.map(\n\t\t\t\t\t({ id, name, email, username, address, phone, website, company }) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\taddress,\n\t\t\t\t\t\t\tphone,\n\t\t\t\t\t\t\twebsite,\n\t\t\t\t\t\t\tcompany,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetFriends(dataMapped);\n\t\t\t\tsetFriendsTampon(dataMapped);\n\t\t\t\tsetFriendsMore(dataMoreMapped);\n\t\t\t\tsetLoad(false);\n\t\t\t});\n\t}, []);\n\n\tconst handleChange = (e) => {\n\t\te.preventDefault();\n\t\tconst filteredFriends = friends.filter((friend) => {\n\t\t\treturn friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n\t\t});\n\t\tsetFriendsTampon((friendsTampon = filteredFriends));\n\t};\n\n\tconst openModal = (id) => {\n\t\tsetSingleFriend(\n\t\t\tfriendsMore.find((friend) => {\n\t\t\t\treturn friend.id === id;\n\t\t\t})\n\t\t);\n\t\tsetModalIsOpen(true);\n\t};\n\n\treturn (\n\n\t\t<CardContainer />\n\t\t// <div className=\"App\">\n\t\t// \t{load ? (\n\t\t// \t\t<Loading />\n\t\t// \t) : (\n\t\t// \t\t<>\n\t\t// \t\t\t<h1 className=\"bloc-cards\">\n\t\t// \t\t\t\t<div className=\"centered\">MES</div>{\" \"}\n\t\t// \t\t\t\t<div className=\"centered\">AMIS</div>\n\t\t// \t\t\t\t<div className=\"centered\">ROBOTS</div>\n\t\t// \t\t\t</h1>\n\t\t// \t\t\t<InputField onChange={handleChange} />\n\t\t// \t\t\t<div className=\"bloc-cards\">\n\t\t// \t\t\t\t{friendsTampon.map((friend, index) => {\n\t\t// \t\t\t\t\treturn (\n\t\t// \t\t\t\t\t\t<Card\n\t\t// \t\t\t\t\t\t\tonClick={() => openModal(friend.id)}\n\t\t// \t\t\t\t\t\t\tkey={index}\n\t\t// \t\t\t\t\t\t\tname={friend.name}\n\t\t// \t\t\t\t\t\t\temail={friend.email}\n\t\t// \t\t\t\t\t\t\turl={`https://robohash.org/${friend.id}`}\n\t\t// \t\t\t\t\t\t/>\n\t\t// \t\t\t\t\t);\n\t\t// \t\t\t\t})}\n\t\t// \t\t\t</div>\t\t\t\t\n\t\t// \t\t</>\n\t\t// \t)}\n\t\t// </div>\n\t);\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}