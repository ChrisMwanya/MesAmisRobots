{"ast":null,"code":"var _jsxFileName = \"/home/user/traveauKDA/Travail10/AmisRobot/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport InputField from \"./components/inputfield\";\nimport \"./App.css\";\nimport Loading from \"./components/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let [friends, setFriends] = useState([]);\n  let [load, setLoad] = useState(false);\n  let [friendsTampon, setFriendsTampon] = useState(friends);\n  useEffect(() => {\n    setLoad(true);\n    fetch(\"http://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      let dataMapped = data.map(({\n        id,\n        name,\n        email\n      }) => {\n        return {\n          id,\n          name,\n          email\n        };\n      });\n      setFriends(dataMapped);\n      setFriendsTampon(dataMapped);\n      setLoad(false);\n    });\n  }, []);\n\n  const handleChange = e => {\n    e.preventDefault();\n    const filteredFriends = friends.filter(friend => {\n      return friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setFriendsTampon(friendsTampon = filteredFriends);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: load ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" MES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), \"  AMIS ROBOTS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloc-cards\",\n        children: friendsTampon.map((friend, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            name: friend.name,\n            email: friend.email,\n            url: `https://robohash.org/${friend.id}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"oGC9iQnk+/Vm9FR9m0ecKssD5zE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/traveauKDA/Travail10/AmisRobot/src/App.jsx"],"names":["React","useState","useEffect","Card","InputField","Loading","App","friends","setFriends","load","setLoad","friendsTampon","setFriendsTampon","fetch","then","response","json","data","dataMapped","map","id","name","email","handleChange","e","preventDefault","filteredFriends","filter","friend","toLowerCase","includes","target","value","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACQ,IAAD,EAAOC,OAAP,IAAiBT,QAAQ,CAAC,KAAD,CAA7B;AAEG,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACM,OAAD,CAAhD;AACHL,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACf,UAAIC,UAAU,GAAGD,IAAI,CAACE,GAAL,CAAS,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD,KAAyB;AAClD,eAAO;AAAEF,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,SAAP;AACA,OAFgB,CAAjB;AAGAd,MAAAA,UAAU,CAACU,UAAD,CAAV;AACYN,MAAAA,gBAAgB,CAACM,UAAD,CAAhB;AACZR,MAAAA,OAAO,CAAC,KAAD,CAAP;AACA,KATF;AAUA,GAZQ,EAYN,EAZM,CAAT;;AAeA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,eAAe,GAAGnB,OAAO,CAACoB,MAAR,CAAgBC,MAAD,IAAY;AAClD,aAAOA,MAAM,CAACP,IAAP,CAAYQ,WAAZ,GAA0BC,QAA1B,CAAmCN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeH,WAAf,EAAnC,CAAP;AACA,KAFuB,CAAxB;AAGAjB,IAAAA,gBAAgB,CAACD,aAAa,GAAGe,eAAjB,CAAhB;AACA,GAND;;AAQA,sBAGC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACEjB,IAAI,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACL;AAAA,8BACC;AAAA,gCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEc;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACEZ,aAAa,CAACQ,GAAd,CAAkB,CAACS,MAAD,EAASK,KAAT,KAAmB;AACrC,8BACC,QAAC,IAAD;AAEC,YAAA,IAAI,EAAEL,MAAM,CAACP,IAFd;AAGC,YAAA,KAAK,EAAEO,MAAM,CAACN,KAHf;AAIC,YAAA,GAAG,EAAG,wBAAuBM,MAAM,CAACR,EAAG;AAJxC,aACMa,KADN;AAAA;AAAA;AAAA;AAAA,kBADD;AAQA,SATA;AADF;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UAHD;AAwBA,CApDD;;GAAM3B,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/card\";\nimport InputField from \"./components/inputfield\";\nimport \"./App.css\"\nimport Loading from \"./components/loading\";\n\nconst App = () => {\n\tlet [friends, setFriends] = useState([]);\n\tlet [load, setLoad]= useState(false)\n\n    let [friendsTampon, setFriendsTampon] = useState(friends);\n\tuseEffect(() => {\n\t\tsetLoad(true)\n\t\tfetch(\"http://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tlet dataMapped = data.map(({ id, name, email }) => {\n\t\t\t\t\treturn { id, name, email };\n\t\t\t\t});\n\t\t\t\tsetFriends(dataMapped);\n                setFriendsTampon(dataMapped);\n\t\t\t\tsetLoad(false);\n\t\t\t});\n\t}, []);\n\n\t\n\tconst handleChange = (e) => {\n\t\te.preventDefault();\n\t\tconst filteredFriends = friends.filter((friend) => {\n\t\t\treturn friend.name.toLowerCase().includes(e.target.value.toLowerCase());\n\t\t});\n\t\tsetFriendsTampon(friendsTampon = filteredFriends);\n\t};\n\n\treturn (\n\t\t\n\t\t\n\t\t<div className=\"App\">\n\t\t\t{load ? <Loading /> :\n\t\t\t<>\n\t\t\t\t<h1><div> MES</div>  AMIS ROBOTS</h1>\n\t\t\t\t<InputField onChange={handleChange} />\n\t\t\t\t<div className=\"bloc-cards\">\n\t\t\t\t\t{friendsTampon.map((friend, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tname={friend.name}\n\t\t\t\t\t\t\t\temail={friend.email}\n\t\t\t\t\t\t\t\turl={`https://robohash.org/${friend.id}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t</>}\n\t\t\n\t\t</div>\n\t);\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}